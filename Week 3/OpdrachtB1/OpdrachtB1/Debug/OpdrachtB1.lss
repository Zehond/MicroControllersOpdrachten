
OpdrachtB1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000810  00000884  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000810  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000898  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ce1  00000000  00000000  000009b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000090a  00000000  00000000  00001691  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000539  00000000  00000000  00001f9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000130  00000000  00000000  000024d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d7  00000000  00000000  00002604  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000040f  00000000  00000000  00002adb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002eea  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e1       	ldi	r30, 0x10	; 16
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	c5 d0       	rcall	.+394    	; 0x23e <main>
  b4:	ab c3       	rjmp	.+1878   	; 0x80c <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <lcd_strobe_lcd_e>:
}

// **Cursor verplaatsen**
void set_cursor(int position) {
	if (position < 0 || position > 15) return;
	lcd_write_cmd(0x80 + position);  // 0x80 is de beginpositie van de cursor
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	80 64       	ori	r24, 0x40	; 64
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	83 ec       	ldi	r24, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	01 97       	sbiw	r24, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <lcd_strobe_lcd_e+0xa>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <lcd_strobe_lcd_e+0x10>
  c8:	00 00       	nop
  ca:	8b b3       	in	r24, 0x1b	; 27
  cc:	8f 7b       	andi	r24, 0xBF	; 191
  ce:	8b bb       	out	0x1b, r24	; 27
  d0:	83 ec       	ldi	r24, 0xC3	; 195
  d2:	99 e0       	ldi	r25, 0x09	; 9
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <lcd_strobe_lcd_e+0x1c>
  d8:	00 c0       	rjmp	.+0      	; 0xda <lcd_strobe_lcd_e+0x22>
  da:	00 00       	nop
  dc:	08 95       	ret

000000de <lcd_write_data>:
  de:	cf 93       	push	r28
  e0:	c8 2f       	mov	r28, r24
  e2:	85 bb       	out	0x15, r24	; 21
  e4:	8b b3       	in	r24, 0x1b	; 27
  e6:	80 61       	ori	r24, 0x10	; 16
  e8:	8b bb       	out	0x1b, r24	; 27
  ea:	e6 df       	rcall	.-52     	; 0xb8 <lcd_strobe_lcd_e>
  ec:	c2 95       	swap	r28
  ee:	c0 7f       	andi	r28, 0xF0	; 240
  f0:	c5 bb       	out	0x15, r28	; 21
  f2:	8b b3       	in	r24, 0x1b	; 27
  f4:	80 61       	ori	r24, 0x10	; 16
  f6:	8b bb       	out	0x1b, r24	; 27
  f8:	df df       	rcall	.-66     	; 0xb8 <lcd_strobe_lcd_e>
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <lcd_write_string>:
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	ec 01       	movw	r28, r24
 104:	02 c0       	rjmp	.+4      	; 0x10a <lcd_write_string+0xc>
 106:	eb df       	rcall	.-42     	; 0xde <lcd_write_data>
 108:	21 96       	adiw	r28, 0x01	; 1
 10a:	88 81       	ld	r24, Y
 10c:	81 11       	cpse	r24, r1
 10e:	fb cf       	rjmp	.-10     	; 0x106 <lcd_write_string+0x8>
 110:	df 91       	pop	r29
 112:	cf 91       	pop	r28
 114:	08 95       	ret

00000116 <lcd_write_cmd>:
 116:	cf 93       	push	r28
 118:	c8 2f       	mov	r28, r24
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	8b b3       	in	r24, 0x1b	; 27
 11e:	8f 7e       	andi	r24, 0xEF	; 239
 120:	8b bb       	out	0x1b, r24	; 27
 122:	ca df       	rcall	.-108    	; 0xb8 <lcd_strobe_lcd_e>
 124:	c2 95       	swap	r28
 126:	c0 7f       	andi	r28, 0xF0	; 240
 128:	c5 bb       	out	0x15, r28	; 21
 12a:	8b b3       	in	r24, 0x1b	; 27
 12c:	8f 7e       	andi	r24, 0xEF	; 239
 12e:	8b bb       	out	0x1b, r24	; 27
 130:	c3 df       	rcall	.-122    	; 0xb8 <lcd_strobe_lcd_e>
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <lcd_clear>:
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	ee df       	rcall	.-36     	; 0x116 <lcd_write_cmd>
 13a:	87 e8       	ldi	r24, 0x87	; 135
 13c:	93 e1       	ldi	r25, 0x13	; 19
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	f1 f7       	brne	.-4      	; 0x13e <lcd_clear+0x8>
 142:	00 c0       	rjmp	.+0      	; 0x144 <lcd_clear+0xe>
 144:	00 00       	nop
 146:	80 e8       	ldi	r24, 0x80	; 128
 148:	e6 cf       	rjmp	.-52     	; 0x116 <lcd_write_cmd>
 14a:	08 95       	ret

0000014c <display_text>:
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	ec 01       	movw	r28, r24
 152:	f1 df       	rcall	.-30     	; 0x136 <lcd_clear>
 154:	ce 01       	movw	r24, r28
 156:	d3 df       	rcall	.-90     	; 0xfe <lcd_write_string>
 158:	df 91       	pop	r29
 15a:	cf 91       	pop	r28
 15c:	08 95       	ret

0000015e <init>:
}

// **LCD initialiseren**
void init(void) {
 15e:	cf 93       	push	r28
	// Poorten instellen
	DDRC = 0xFF;   // LCD data-uitgangen
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xFF;   // LCD besturing
 164:	8a bb       	out	0x1a, r24	; 26

	PORTC = 0x00;
 166:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
 168:	1b ba       	out	0x1b, r1	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16a:	8b e7       	ldi	r24, 0x7B	; 123
 16c:	92 e9       	ldi	r25, 0x92	; 146
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <init+0x10>
 172:	00 c0       	rjmp	.+0      	; 0x174 <init+0x16>
 174:	00 00       	nop

	// Initialisatieproces
	_delay_ms(15);

	PORTC = 0x20;  // Function set
 176:	c0 e2       	ldi	r28, 0x20	; 32
 178:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 17a:	9e df       	rcall	.-196    	; 0xb8 <lcd_strobe_lcd_e>

	PORTC = 0x20;
	lcd_strobe_lcd_e();
 17c:	c5 bb       	out	0x15, r28	; 21
 17e:	9c df       	rcall	.-200    	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x80;
 180:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 182:	85 bb       	out	0x15, r24	; 21

	PORTC = 0x00;
 184:	99 df       	rcall	.-206    	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 186:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
 188:	97 df       	rcall	.-210    	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 18a:	80 ef       	ldi	r24, 0xF0	; 240

	PORTC = 0x00;
	lcd_strobe_lcd_e();
 18c:	85 bb       	out	0x15, r24	; 21
 18e:	94 df       	rcall	.-216    	; 0xb8 <lcd_strobe_lcd_e>
	PORTC = 0x60;
 190:	15 ba       	out	0x15, r1	; 21
 192:	92 df       	rcall	.-220    	; 0xb8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 194:	80 e6       	ldi	r24, 0x60	; 96
 196:	85 bb       	out	0x15, r24	; 21

	lcd_clear();  // Wis het display bij opstarten
 198:	8f df       	rcall	.-226    	; 0xb8 <lcd_strobe_lcd_e>
 19a:	cd df       	rcall	.-102    	; 0x136 <lcd_clear>
}
 19c:	cf 91       	pop	r28
 19e:	08 95       	ret

000001a0 <wait>:

// **Wachtfunctie**
void wait(int ms) {
	for (int i = 0; i < ms; i++) {
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	08 c0       	rjmp	.+16     	; 0x1b6 <wait+0x16>
 1a6:	e3 ec       	ldi	r30, 0xC3	; 195
 1a8:	f9 e0       	ldi	r31, 0x09	; 9
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <wait+0xa>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <wait+0x10>
 1b0:	00 00       	nop
 1b2:	2f 5f       	subi	r18, 0xFF	; 255
 1b4:	3f 4f       	sbci	r19, 0xFF	; 255
 1b6:	28 17       	cp	r18, r24
 1b8:	39 07       	cpc	r19, r25
 1ba:	ac f3       	brlt	.-22     	; 0x1a6 <wait+0x6>
		_delay_ms(1);
	}
}
 1bc:	08 95       	ret

000001be <display_count>:
// **Toon tellerwaarde op LCD**
void display_count(uint8_t count) {
 1be:	0f 93       	push	r16
 1c0:	1f 93       	push	r17
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	cd b7       	in	r28, 0x3d	; 61
 1c8:	de b7       	in	r29, 0x3e	; 62
 1ca:	60 97       	sbiw	r28, 0x10	; 16
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	f8 94       	cli
 1d0:	de bf       	out	0x3e, r29	; 62
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	cd bf       	out	0x3d, r28	; 61
	char buffer[16];
	sprintf(buffer, "Count: %d", count);
 1d6:	1f 92       	push	r1
 1d8:	8f 93       	push	r24
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	91 e0       	ldi	r25, 0x01	; 1
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	8e 01       	movw	r16, r28
 1e4:	0f 5f       	subi	r16, 0xFF	; 255
 1e6:	1f 4f       	sbci	r17, 0xFF	; 255
 1e8:	1f 93       	push	r17
 1ea:	0f 93       	push	r16
 1ec:	34 d0       	rcall	.+104    	; 0x256 <sprintf>
	lcd_clear();
 1ee:	a3 df       	rcall	.-186    	; 0x136 <lcd_clear>
	display_text(buffer);
 1f0:	c8 01       	movw	r24, r16
 1f2:	ac df       	rcall	.-168    	; 0x14c <display_text>
 1f4:	0f 90       	pop	r0
}
 1f6:	0f 90       	pop	r0
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	60 96       	adiw	r28, 0x10	; 16
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	de bf       	out	0x3e, r29	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	cd bf       	out	0x3d, r28	; 61
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	1f 91       	pop	r17
 212:	0f 91       	pop	r16
 214:	08 95       	ret

00000216 <counter2_init>:
 216:	81 b3       	in	r24, 0x11	; 17

// **Timer2 instellen als teller (Counter Mode)**
void counter2_init() {
	DDRD &= ~(1 << PD7);   // PD7 als input (T2 pin)
 218:	8f 77       	andi	r24, 0x7F	; 127
 21a:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1 << PD7);   // Optioneel: Pull-up weerstand aan (indien nodig)
 21c:	82 b3       	in	r24, 0x12	; 18
 21e:	80 68       	ori	r24, 0x80	; 128
 220:	82 bb       	out	0x12, r24	; 18

	TCCR2 = 0b00000111; // Externe klok op stijgende flank
 222:	87 e0       	ldi	r24, 0x07	; 7
 224:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0x00;       // Teller resetten
 226:	14 bc       	out	0x24, r1	; 36
 228:	08 95       	ret

0000022a <init_hardware>:
}

// **LCD en hardware initialiseren**
void init_hardware() {
	DDRA = 0xFF;  // LCD aansturing
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xFF;  // LCD data
 22e:	84 bb       	out	0x14, r24	; 20
	counter2_init(); // Start Timer2 teller
 230:	f2 df       	rcall	.-28     	; 0x216 <counter2_init>
	init();         // Init LCD
 232:	95 df       	rcall	.-214    	; 0x15e <init>
	lcd_clear();
 234:	80 df       	rcall	.-256    	; 0x136 <lcd_clear>
	display_text("Ready...");
 236:	8a e0       	ldi	r24, 0x0A	; 10
 238:	91 e0       	ldi	r25, 0x01	; 1
 23a:	88 cf       	rjmp	.-240    	; 0x14c <display_text>
 23c:	08 95       	ret

0000023e <main>:
 23e:	f5 df       	rcall	.-22     	; 0x22a <init_hardware>
}

int main(void) {
	init_hardware();
	uint8_t prev_count = 0;
 240:	d0 e0       	ldi	r29, 0x00	; 0

	while (1) {
		uint8_t new_count = TCNT2;  // Lees tellerwaarde
 242:	c4 b5       	in	r28, 0x24	; 36

		if (new_count != prev_count) {  // Alleen updaten als waarde verandert
 244:	dc 17       	cp	r29, r28
 246:	19 f0       	breq	.+6      	; 0x24e <main+0x10>
			prev_count = new_count;
			display_count(new_count);
 248:	8c 2f       	mov	r24, r28
 24a:	b9 df       	rcall	.-142    	; 0x1be <display_count>

	while (1) {
		uint8_t new_count = TCNT2;  // Lees tellerwaarde

		if (new_count != prev_count) {  // Alleen updaten als waarde verandert
			prev_count = new_count;
 24c:	dc 2f       	mov	r29, r28
			display_count(new_count);
		}

		wait(250);
 24e:	8a ef       	ldi	r24, 0xFA	; 250
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	a6 df       	rcall	.-180    	; 0x1a0 <wait>
	}
 254:	f6 cf       	rjmp	.-20     	; 0x242 <main+0x4>

00000256 <sprintf>:
 256:	0f 93       	push	r16
 258:	1f 93       	push	r17
 25a:	cf 93       	push	r28
 25c:	df 93       	push	r29
 25e:	cd b7       	in	r28, 0x3d	; 61
 260:	de b7       	in	r29, 0x3e	; 62
 262:	2e 97       	sbiw	r28, 0x0e	; 14
 264:	0f b6       	in	r0, 0x3f	; 63
 266:	f8 94       	cli
 268:	de bf       	out	0x3e, r29	; 62
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	cd bf       	out	0x3d, r28	; 61
 26e:	0d 89       	ldd	r16, Y+21	; 0x15
 270:	1e 89       	ldd	r17, Y+22	; 0x16
 272:	86 e0       	ldi	r24, 0x06	; 6
 274:	8c 83       	std	Y+4, r24	; 0x04
 276:	1a 83       	std	Y+2, r17	; 0x02
 278:	09 83       	std	Y+1, r16	; 0x01
 27a:	8f ef       	ldi	r24, 0xFF	; 255
 27c:	9f e7       	ldi	r25, 0x7F	; 127
 27e:	9e 83       	std	Y+6, r25	; 0x06
 280:	8d 83       	std	Y+5, r24	; 0x05
 282:	ae 01       	movw	r20, r28
 284:	47 5e       	subi	r20, 0xE7	; 231
 286:	5f 4f       	sbci	r21, 0xFF	; 255
 288:	6f 89       	ldd	r22, Y+23	; 0x17
 28a:	78 8d       	ldd	r23, Y+24	; 0x18
 28c:	ce 01       	movw	r24, r28
 28e:	01 96       	adiw	r24, 0x01	; 1
 290:	10 d0       	rcall	.+32     	; 0x2b2 <vfprintf>
 292:	ef 81       	ldd	r30, Y+7	; 0x07
 294:	f8 85       	ldd	r31, Y+8	; 0x08
 296:	e0 0f       	add	r30, r16
 298:	f1 1f       	adc	r31, r17
 29a:	10 82       	st	Z, r1
 29c:	2e 96       	adiw	r28, 0x0e	; 14
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	1f 91       	pop	r17
 2ae:	0f 91       	pop	r16
 2b0:	08 95       	ret

000002b2 <vfprintf>:
 2b2:	2f 92       	push	r2
 2b4:	3f 92       	push	r3
 2b6:	4f 92       	push	r4
 2b8:	5f 92       	push	r5
 2ba:	6f 92       	push	r6
 2bc:	7f 92       	push	r7
 2be:	8f 92       	push	r8
 2c0:	9f 92       	push	r9
 2c2:	af 92       	push	r10
 2c4:	bf 92       	push	r11
 2c6:	cf 92       	push	r12
 2c8:	df 92       	push	r13
 2ca:	ef 92       	push	r14
 2cc:	ff 92       	push	r15
 2ce:	0f 93       	push	r16
 2d0:	1f 93       	push	r17
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	cd b7       	in	r28, 0x3d	; 61
 2d8:	de b7       	in	r29, 0x3e	; 62
 2da:	2b 97       	sbiw	r28, 0x0b	; 11
 2dc:	0f b6       	in	r0, 0x3f	; 63
 2de:	f8 94       	cli
 2e0:	de bf       	out	0x3e, r29	; 62
 2e2:	0f be       	out	0x3f, r0	; 63
 2e4:	cd bf       	out	0x3d, r28	; 61
 2e6:	6c 01       	movw	r12, r24
 2e8:	7b 01       	movw	r14, r22
 2ea:	8a 01       	movw	r16, r20
 2ec:	fc 01       	movw	r30, r24
 2ee:	17 82       	std	Z+7, r1	; 0x07
 2f0:	16 82       	std	Z+6, r1	; 0x06
 2f2:	83 81       	ldd	r24, Z+3	; 0x03
 2f4:	81 ff       	sbrs	r24, 1
 2f6:	bf c1       	rjmp	.+894    	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 2f8:	ce 01       	movw	r24, r28
 2fa:	01 96       	adiw	r24, 0x01	; 1
 2fc:	3c 01       	movw	r6, r24
 2fe:	f6 01       	movw	r30, r12
 300:	93 81       	ldd	r25, Z+3	; 0x03
 302:	f7 01       	movw	r30, r14
 304:	93 fd       	sbrc	r25, 3
 306:	85 91       	lpm	r24, Z+
 308:	93 ff       	sbrs	r25, 3
 30a:	81 91       	ld	r24, Z+
 30c:	7f 01       	movw	r14, r30
 30e:	88 23       	and	r24, r24
 310:	09 f4       	brne	.+2      	; 0x314 <vfprintf+0x62>
 312:	ad c1       	rjmp	.+858    	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 314:	85 32       	cpi	r24, 0x25	; 37
 316:	39 f4       	brne	.+14     	; 0x326 <vfprintf+0x74>
 318:	93 fd       	sbrc	r25, 3
 31a:	85 91       	lpm	r24, Z+
 31c:	93 ff       	sbrs	r25, 3
 31e:	81 91       	ld	r24, Z+
 320:	7f 01       	movw	r14, r30
 322:	85 32       	cpi	r24, 0x25	; 37
 324:	21 f4       	brne	.+8      	; 0x32e <vfprintf+0x7c>
 326:	b6 01       	movw	r22, r12
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	d6 d1       	rcall	.+940    	; 0x6d8 <fputc>
 32c:	e8 cf       	rjmp	.-48     	; 0x2fe <vfprintf+0x4c>
 32e:	91 2c       	mov	r9, r1
 330:	21 2c       	mov	r2, r1
 332:	31 2c       	mov	r3, r1
 334:	ff e1       	ldi	r31, 0x1F	; 31
 336:	f3 15       	cp	r31, r3
 338:	d8 f0       	brcs	.+54     	; 0x370 <vfprintf+0xbe>
 33a:	8b 32       	cpi	r24, 0x2B	; 43
 33c:	79 f0       	breq	.+30     	; 0x35c <vfprintf+0xaa>
 33e:	38 f4       	brcc	.+14     	; 0x34e <vfprintf+0x9c>
 340:	80 32       	cpi	r24, 0x20	; 32
 342:	79 f0       	breq	.+30     	; 0x362 <vfprintf+0xb0>
 344:	83 32       	cpi	r24, 0x23	; 35
 346:	a1 f4       	brne	.+40     	; 0x370 <vfprintf+0xbe>
 348:	23 2d       	mov	r18, r3
 34a:	20 61       	ori	r18, 0x10	; 16
 34c:	1d c0       	rjmp	.+58     	; 0x388 <vfprintf+0xd6>
 34e:	8d 32       	cpi	r24, 0x2D	; 45
 350:	61 f0       	breq	.+24     	; 0x36a <vfprintf+0xb8>
 352:	80 33       	cpi	r24, 0x30	; 48
 354:	69 f4       	brne	.+26     	; 0x370 <vfprintf+0xbe>
 356:	23 2d       	mov	r18, r3
 358:	21 60       	ori	r18, 0x01	; 1
 35a:	16 c0       	rjmp	.+44     	; 0x388 <vfprintf+0xd6>
 35c:	83 2d       	mov	r24, r3
 35e:	82 60       	ori	r24, 0x02	; 2
 360:	38 2e       	mov	r3, r24
 362:	e3 2d       	mov	r30, r3
 364:	e4 60       	ori	r30, 0x04	; 4
 366:	3e 2e       	mov	r3, r30
 368:	2a c0       	rjmp	.+84     	; 0x3be <vfprintf+0x10c>
 36a:	f3 2d       	mov	r31, r3
 36c:	f8 60       	ori	r31, 0x08	; 8
 36e:	1d c0       	rjmp	.+58     	; 0x3aa <vfprintf+0xf8>
 370:	37 fc       	sbrc	r3, 7
 372:	2d c0       	rjmp	.+90     	; 0x3ce <vfprintf+0x11c>
 374:	20 ed       	ldi	r18, 0xD0	; 208
 376:	28 0f       	add	r18, r24
 378:	2a 30       	cpi	r18, 0x0A	; 10
 37a:	40 f0       	brcs	.+16     	; 0x38c <vfprintf+0xda>
 37c:	8e 32       	cpi	r24, 0x2E	; 46
 37e:	b9 f4       	brne	.+46     	; 0x3ae <vfprintf+0xfc>
 380:	36 fc       	sbrc	r3, 6
 382:	75 c1       	rjmp	.+746    	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 384:	23 2d       	mov	r18, r3
 386:	20 64       	ori	r18, 0x40	; 64
 388:	32 2e       	mov	r3, r18
 38a:	19 c0       	rjmp	.+50     	; 0x3be <vfprintf+0x10c>
 38c:	36 fe       	sbrs	r3, 6
 38e:	06 c0       	rjmp	.+12     	; 0x39c <vfprintf+0xea>
 390:	8a e0       	ldi	r24, 0x0A	; 10
 392:	98 9e       	mul	r9, r24
 394:	20 0d       	add	r18, r0
 396:	11 24       	eor	r1, r1
 398:	92 2e       	mov	r9, r18
 39a:	11 c0       	rjmp	.+34     	; 0x3be <vfprintf+0x10c>
 39c:	ea e0       	ldi	r30, 0x0A	; 10
 39e:	2e 9e       	mul	r2, r30
 3a0:	20 0d       	add	r18, r0
 3a2:	11 24       	eor	r1, r1
 3a4:	22 2e       	mov	r2, r18
 3a6:	f3 2d       	mov	r31, r3
 3a8:	f0 62       	ori	r31, 0x20	; 32
 3aa:	3f 2e       	mov	r3, r31
 3ac:	08 c0       	rjmp	.+16     	; 0x3be <vfprintf+0x10c>
 3ae:	8c 36       	cpi	r24, 0x6C	; 108
 3b0:	21 f4       	brne	.+8      	; 0x3ba <vfprintf+0x108>
 3b2:	83 2d       	mov	r24, r3
 3b4:	80 68       	ori	r24, 0x80	; 128
 3b6:	38 2e       	mov	r3, r24
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <vfprintf+0x10c>
 3ba:	88 36       	cpi	r24, 0x68	; 104
 3bc:	41 f4       	brne	.+16     	; 0x3ce <vfprintf+0x11c>
 3be:	f7 01       	movw	r30, r14
 3c0:	93 fd       	sbrc	r25, 3
 3c2:	85 91       	lpm	r24, Z+
 3c4:	93 ff       	sbrs	r25, 3
 3c6:	81 91       	ld	r24, Z+
 3c8:	7f 01       	movw	r14, r30
 3ca:	81 11       	cpse	r24, r1
 3cc:	b3 cf       	rjmp	.-154    	; 0x334 <vfprintf+0x82>
 3ce:	98 2f       	mov	r25, r24
 3d0:	9f 7d       	andi	r25, 0xDF	; 223
 3d2:	95 54       	subi	r25, 0x45	; 69
 3d4:	93 30       	cpi	r25, 0x03	; 3
 3d6:	28 f4       	brcc	.+10     	; 0x3e2 <vfprintf+0x130>
 3d8:	0c 5f       	subi	r16, 0xFC	; 252
 3da:	1f 4f       	sbci	r17, 0xFF	; 255
 3dc:	9f e3       	ldi	r25, 0x3F	; 63
 3de:	99 83       	std	Y+1, r25	; 0x01
 3e0:	0d c0       	rjmp	.+26     	; 0x3fc <vfprintf+0x14a>
 3e2:	83 36       	cpi	r24, 0x63	; 99
 3e4:	31 f0       	breq	.+12     	; 0x3f2 <vfprintf+0x140>
 3e6:	83 37       	cpi	r24, 0x73	; 115
 3e8:	71 f0       	breq	.+28     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3ea:	83 35       	cpi	r24, 0x53	; 83
 3ec:	09 f0       	breq	.+2      	; 0x3f0 <vfprintf+0x13e>
 3ee:	55 c0       	rjmp	.+170    	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 3f0:	20 c0       	rjmp	.+64     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3f2:	f8 01       	movw	r30, r16
 3f4:	80 81       	ld	r24, Z
 3f6:	89 83       	std	Y+1, r24	; 0x01
 3f8:	0e 5f       	subi	r16, 0xFE	; 254
 3fa:	1f 4f       	sbci	r17, 0xFF	; 255
 3fc:	88 24       	eor	r8, r8
 3fe:	83 94       	inc	r8
 400:	91 2c       	mov	r9, r1
 402:	53 01       	movw	r10, r6
 404:	12 c0       	rjmp	.+36     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 406:	28 01       	movw	r4, r16
 408:	f2 e0       	ldi	r31, 0x02	; 2
 40a:	4f 0e       	add	r4, r31
 40c:	51 1c       	adc	r5, r1
 40e:	f8 01       	movw	r30, r16
 410:	a0 80       	ld	r10, Z
 412:	b1 80       	ldd	r11, Z+1	; 0x01
 414:	36 fe       	sbrs	r3, 6
 416:	03 c0       	rjmp	.+6      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 418:	69 2d       	mov	r22, r9
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41e:	6f ef       	ldi	r22, 0xFF	; 255
 420:	7f ef       	ldi	r23, 0xFF	; 255
 422:	c5 01       	movw	r24, r10
 424:	4e d1       	rcall	.+668    	; 0x6c2 <strnlen>
 426:	4c 01       	movw	r8, r24
 428:	82 01       	movw	r16, r4
 42a:	f3 2d       	mov	r31, r3
 42c:	ff 77       	andi	r31, 0x7F	; 127
 42e:	3f 2e       	mov	r3, r31
 430:	15 c0       	rjmp	.+42     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 432:	28 01       	movw	r4, r16
 434:	22 e0       	ldi	r18, 0x02	; 2
 436:	42 0e       	add	r4, r18
 438:	51 1c       	adc	r5, r1
 43a:	f8 01       	movw	r30, r16
 43c:	a0 80       	ld	r10, Z
 43e:	b1 80       	ldd	r11, Z+1	; 0x01
 440:	36 fe       	sbrs	r3, 6
 442:	03 c0       	rjmp	.+6      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 444:	69 2d       	mov	r22, r9
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	6f ef       	ldi	r22, 0xFF	; 255
 44c:	7f ef       	ldi	r23, 0xFF	; 255
 44e:	c5 01       	movw	r24, r10
 450:	2d d1       	rcall	.+602    	; 0x6ac <strnlen_P>
 452:	4c 01       	movw	r8, r24
 454:	f3 2d       	mov	r31, r3
 456:	f0 68       	ori	r31, 0x80	; 128
 458:	3f 2e       	mov	r3, r31
 45a:	82 01       	movw	r16, r4
 45c:	33 fc       	sbrc	r3, 3
 45e:	19 c0       	rjmp	.+50     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 460:	82 2d       	mov	r24, r2
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	88 16       	cp	r8, r24
 466:	99 06       	cpc	r9, r25
 468:	a0 f4       	brcc	.+40     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 46a:	b6 01       	movw	r22, r12
 46c:	80 e2       	ldi	r24, 0x20	; 32
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	33 d1       	rcall	.+614    	; 0x6d8 <fputc>
 472:	2a 94       	dec	r2
 474:	f5 cf       	rjmp	.-22     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 476:	f5 01       	movw	r30, r10
 478:	37 fc       	sbrc	r3, 7
 47a:	85 91       	lpm	r24, Z+
 47c:	37 fe       	sbrs	r3, 7
 47e:	81 91       	ld	r24, Z+
 480:	5f 01       	movw	r10, r30
 482:	b6 01       	movw	r22, r12
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	28 d1       	rcall	.+592    	; 0x6d8 <fputc>
 488:	21 10       	cpse	r2, r1
 48a:	2a 94       	dec	r2
 48c:	21 e0       	ldi	r18, 0x01	; 1
 48e:	82 1a       	sub	r8, r18
 490:	91 08       	sbc	r9, r1
 492:	81 14       	cp	r8, r1
 494:	91 04       	cpc	r9, r1
 496:	79 f7       	brne	.-34     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 498:	e1 c0       	rjmp	.+450    	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 49a:	84 36       	cpi	r24, 0x64	; 100
 49c:	11 f0       	breq	.+4      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 49e:	89 36       	cpi	r24, 0x69	; 105
 4a0:	39 f5       	brne	.+78     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4a2:	f8 01       	movw	r30, r16
 4a4:	37 fe       	sbrs	r3, 7
 4a6:	07 c0       	rjmp	.+14     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a8:	60 81       	ld	r22, Z
 4aa:	71 81       	ldd	r23, Z+1	; 0x01
 4ac:	82 81       	ldd	r24, Z+2	; 0x02
 4ae:	93 81       	ldd	r25, Z+3	; 0x03
 4b0:	0c 5f       	subi	r16, 0xFC	; 252
 4b2:	1f 4f       	sbci	r17, 0xFF	; 255
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4b6:	60 81       	ld	r22, Z
 4b8:	71 81       	ldd	r23, Z+1	; 0x01
 4ba:	07 2e       	mov	r0, r23
 4bc:	00 0c       	add	r0, r0
 4be:	88 0b       	sbc	r24, r24
 4c0:	99 0b       	sbc	r25, r25
 4c2:	0e 5f       	subi	r16, 0xFE	; 254
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	f3 2d       	mov	r31, r3
 4c8:	ff 76       	andi	r31, 0x6F	; 111
 4ca:	3f 2e       	mov	r3, r31
 4cc:	97 ff       	sbrs	r25, 7
 4ce:	09 c0       	rjmp	.+18     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d0:	90 95       	com	r25
 4d2:	80 95       	com	r24
 4d4:	70 95       	com	r23
 4d6:	61 95       	neg	r22
 4d8:	7f 4f       	sbci	r23, 0xFF	; 255
 4da:	8f 4f       	sbci	r24, 0xFF	; 255
 4dc:	9f 4f       	sbci	r25, 0xFF	; 255
 4de:	f0 68       	ori	r31, 0x80	; 128
 4e0:	3f 2e       	mov	r3, r31
 4e2:	2a e0       	ldi	r18, 0x0A	; 10
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	a3 01       	movw	r20, r6
 4e8:	33 d1       	rcall	.+614    	; 0x750 <__ultoa_invert>
 4ea:	88 2e       	mov	r8, r24
 4ec:	86 18       	sub	r8, r6
 4ee:	44 c0       	rjmp	.+136    	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 4f0:	85 37       	cpi	r24, 0x75	; 117
 4f2:	31 f4       	brne	.+12     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f4:	23 2d       	mov	r18, r3
 4f6:	2f 7e       	andi	r18, 0xEF	; 239
 4f8:	b2 2e       	mov	r11, r18
 4fa:	2a e0       	ldi	r18, 0x0A	; 10
 4fc:	30 e0       	ldi	r19, 0x00	; 0
 4fe:	25 c0       	rjmp	.+74     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 500:	93 2d       	mov	r25, r3
 502:	99 7f       	andi	r25, 0xF9	; 249
 504:	b9 2e       	mov	r11, r25
 506:	8f 36       	cpi	r24, 0x6F	; 111
 508:	c1 f0       	breq	.+48     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 50a:	18 f4       	brcc	.+6      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 50c:	88 35       	cpi	r24, 0x58	; 88
 50e:	79 f0       	breq	.+30     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 510:	ae c0       	rjmp	.+348    	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 512:	80 37       	cpi	r24, 0x70	; 112
 514:	19 f0       	breq	.+6      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 516:	88 37       	cpi	r24, 0x78	; 120
 518:	21 f0       	breq	.+8      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51a:	a9 c0       	rjmp	.+338    	; 0x66e <__LOCK_REGION_LENGTH__+0x26e>
 51c:	e9 2f       	mov	r30, r25
 51e:	e0 61       	ori	r30, 0x10	; 16
 520:	be 2e       	mov	r11, r30
 522:	b4 fe       	sbrs	r11, 4
 524:	0d c0       	rjmp	.+26     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 526:	fb 2d       	mov	r31, r11
 528:	f4 60       	ori	r31, 0x04	; 4
 52a:	bf 2e       	mov	r11, r31
 52c:	09 c0       	rjmp	.+18     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 52e:	34 fe       	sbrs	r3, 4
 530:	0a c0       	rjmp	.+20     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 532:	29 2f       	mov	r18, r25
 534:	26 60       	ori	r18, 0x06	; 6
 536:	b2 2e       	mov	r11, r18
 538:	06 c0       	rjmp	.+12     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 53a:	28 e0       	ldi	r18, 0x08	; 8
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	05 c0       	rjmp	.+10     	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 540:	20 e1       	ldi	r18, 0x10	; 16
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	02 c0       	rjmp	.+4      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 546:	20 e1       	ldi	r18, 0x10	; 16
 548:	32 e0       	ldi	r19, 0x02	; 2
 54a:	f8 01       	movw	r30, r16
 54c:	b7 fe       	sbrs	r11, 7
 54e:	07 c0       	rjmp	.+14     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 550:	60 81       	ld	r22, Z
 552:	71 81       	ldd	r23, Z+1	; 0x01
 554:	82 81       	ldd	r24, Z+2	; 0x02
 556:	93 81       	ldd	r25, Z+3	; 0x03
 558:	0c 5f       	subi	r16, 0xFC	; 252
 55a:	1f 4f       	sbci	r17, 0xFF	; 255
 55c:	06 c0       	rjmp	.+12     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 55e:	60 81       	ld	r22, Z
 560:	71 81       	ldd	r23, Z+1	; 0x01
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	0e 5f       	subi	r16, 0xFE	; 254
 568:	1f 4f       	sbci	r17, 0xFF	; 255
 56a:	a3 01       	movw	r20, r6
 56c:	f1 d0       	rcall	.+482    	; 0x750 <__ultoa_invert>
 56e:	88 2e       	mov	r8, r24
 570:	86 18       	sub	r8, r6
 572:	fb 2d       	mov	r31, r11
 574:	ff 77       	andi	r31, 0x7F	; 127
 576:	3f 2e       	mov	r3, r31
 578:	36 fe       	sbrs	r3, 6
 57a:	0d c0       	rjmp	.+26     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 57c:	23 2d       	mov	r18, r3
 57e:	2e 7f       	andi	r18, 0xFE	; 254
 580:	a2 2e       	mov	r10, r18
 582:	89 14       	cp	r8, r9
 584:	58 f4       	brcc	.+22     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 586:	34 fe       	sbrs	r3, 4
 588:	0b c0       	rjmp	.+22     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 58a:	32 fc       	sbrc	r3, 2
 58c:	09 c0       	rjmp	.+18     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 58e:	83 2d       	mov	r24, r3
 590:	8e 7e       	andi	r24, 0xEE	; 238
 592:	a8 2e       	mov	r10, r24
 594:	05 c0       	rjmp	.+10     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 596:	b8 2c       	mov	r11, r8
 598:	a3 2c       	mov	r10, r3
 59a:	03 c0       	rjmp	.+6      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 59c:	b8 2c       	mov	r11, r8
 59e:	01 c0       	rjmp	.+2      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 5a0:	b9 2c       	mov	r11, r9
 5a2:	a4 fe       	sbrs	r10, 4
 5a4:	0f c0       	rjmp	.+30     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5a6:	fe 01       	movw	r30, r28
 5a8:	e8 0d       	add	r30, r8
 5aa:	f1 1d       	adc	r31, r1
 5ac:	80 81       	ld	r24, Z
 5ae:	80 33       	cpi	r24, 0x30	; 48
 5b0:	21 f4       	brne	.+8      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 5b2:	9a 2d       	mov	r25, r10
 5b4:	99 7e       	andi	r25, 0xE9	; 233
 5b6:	a9 2e       	mov	r10, r25
 5b8:	09 c0       	rjmp	.+18     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5ba:	a2 fe       	sbrs	r10, 2
 5bc:	06 c0       	rjmp	.+12     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5be:	b3 94       	inc	r11
 5c0:	b3 94       	inc	r11
 5c2:	04 c0       	rjmp	.+8      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c4:	8a 2d       	mov	r24, r10
 5c6:	86 78       	andi	r24, 0x86	; 134
 5c8:	09 f0       	breq	.+2      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5ca:	b3 94       	inc	r11
 5cc:	a3 fc       	sbrc	r10, 3
 5ce:	10 c0       	rjmp	.+32     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5d0:	a0 fe       	sbrs	r10, 0
 5d2:	06 c0       	rjmp	.+12     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d4:	b2 14       	cp	r11, r2
 5d6:	80 f4       	brcc	.+32     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5d8:	28 0c       	add	r2, r8
 5da:	92 2c       	mov	r9, r2
 5dc:	9b 18       	sub	r9, r11
 5de:	0d c0       	rjmp	.+26     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e0:	b2 14       	cp	r11, r2
 5e2:	58 f4       	brcc	.+22     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e4:	b6 01       	movw	r22, r12
 5e6:	80 e2       	ldi	r24, 0x20	; 32
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	76 d0       	rcall	.+236    	; 0x6d8 <fputc>
 5ec:	b3 94       	inc	r11
 5ee:	f8 cf       	rjmp	.-16     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5f0:	b2 14       	cp	r11, r2
 5f2:	18 f4       	brcc	.+6      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f4:	2b 18       	sub	r2, r11
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f8:	98 2c       	mov	r9, r8
 5fa:	21 2c       	mov	r2, r1
 5fc:	a4 fe       	sbrs	r10, 4
 5fe:	0f c0       	rjmp	.+30     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 600:	b6 01       	movw	r22, r12
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	68 d0       	rcall	.+208    	; 0x6d8 <fputc>
 608:	a2 fe       	sbrs	r10, 2
 60a:	16 c0       	rjmp	.+44     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 60c:	a1 fc       	sbrc	r10, 1
 60e:	03 c0       	rjmp	.+6      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 610:	88 e7       	ldi	r24, 0x78	; 120
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 616:	88 e5       	ldi	r24, 0x58	; 88
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	b6 01       	movw	r22, r12
 61c:	0c c0       	rjmp	.+24     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 61e:	8a 2d       	mov	r24, r10
 620:	86 78       	andi	r24, 0x86	; 134
 622:	51 f0       	breq	.+20     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 624:	a1 fe       	sbrs	r10, 1
 626:	02 c0       	rjmp	.+4      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 628:	8b e2       	ldi	r24, 0x2B	; 43
 62a:	01 c0       	rjmp	.+2      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62c:	80 e2       	ldi	r24, 0x20	; 32
 62e:	a7 fc       	sbrc	r10, 7
 630:	8d e2       	ldi	r24, 0x2D	; 45
 632:	b6 01       	movw	r22, r12
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	50 d0       	rcall	.+160    	; 0x6d8 <fputc>
 638:	89 14       	cp	r8, r9
 63a:	30 f4       	brcc	.+12     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63c:	b6 01       	movw	r22, r12
 63e:	80 e3       	ldi	r24, 0x30	; 48
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	4a d0       	rcall	.+148    	; 0x6d8 <fputc>
 644:	9a 94       	dec	r9
 646:	f8 cf       	rjmp	.-16     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 648:	8a 94       	dec	r8
 64a:	f3 01       	movw	r30, r6
 64c:	e8 0d       	add	r30, r8
 64e:	f1 1d       	adc	r31, r1
 650:	80 81       	ld	r24, Z
 652:	b6 01       	movw	r22, r12
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	40 d0       	rcall	.+128    	; 0x6d8 <fputc>
 658:	81 10       	cpse	r8, r1
 65a:	f6 cf       	rjmp	.-20     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 65c:	22 20       	and	r2, r2
 65e:	09 f4       	brne	.+2      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 660:	4e ce       	rjmp	.-868    	; 0x2fe <vfprintf+0x4c>
 662:	b6 01       	movw	r22, r12
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	37 d0       	rcall	.+110    	; 0x6d8 <fputc>
 66a:	2a 94       	dec	r2
 66c:	f7 cf       	rjmp	.-18     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 66e:	f6 01       	movw	r30, r12
 670:	86 81       	ldd	r24, Z+6	; 0x06
 672:	97 81       	ldd	r25, Z+7	; 0x07
 674:	02 c0       	rjmp	.+4      	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	9f ef       	ldi	r25, 0xFF	; 255
 67a:	2b 96       	adiw	r28, 0x0b	; 11
 67c:	0f b6       	in	r0, 0x3f	; 63
 67e:	f8 94       	cli
 680:	de bf       	out	0x3e, r29	; 62
 682:	0f be       	out	0x3f, r0	; 63
 684:	cd bf       	out	0x3d, r28	; 61
 686:	df 91       	pop	r29
 688:	cf 91       	pop	r28
 68a:	1f 91       	pop	r17
 68c:	0f 91       	pop	r16
 68e:	ff 90       	pop	r15
 690:	ef 90       	pop	r14
 692:	df 90       	pop	r13
 694:	cf 90       	pop	r12
 696:	bf 90       	pop	r11
 698:	af 90       	pop	r10
 69a:	9f 90       	pop	r9
 69c:	8f 90       	pop	r8
 69e:	7f 90       	pop	r7
 6a0:	6f 90       	pop	r6
 6a2:	5f 90       	pop	r5
 6a4:	4f 90       	pop	r4
 6a6:	3f 90       	pop	r3
 6a8:	2f 90       	pop	r2
 6aa:	08 95       	ret

000006ac <strnlen_P>:
 6ac:	fc 01       	movw	r30, r24
 6ae:	05 90       	lpm	r0, Z+
 6b0:	61 50       	subi	r22, 0x01	; 1
 6b2:	70 40       	sbci	r23, 0x00	; 0
 6b4:	01 10       	cpse	r0, r1
 6b6:	d8 f7       	brcc	.-10     	; 0x6ae <strnlen_P+0x2>
 6b8:	80 95       	com	r24
 6ba:	90 95       	com	r25
 6bc:	8e 0f       	add	r24, r30
 6be:	9f 1f       	adc	r25, r31
 6c0:	08 95       	ret

000006c2 <strnlen>:
 6c2:	fc 01       	movw	r30, r24
 6c4:	61 50       	subi	r22, 0x01	; 1
 6c6:	70 40       	sbci	r23, 0x00	; 0
 6c8:	01 90       	ld	r0, Z+
 6ca:	01 10       	cpse	r0, r1
 6cc:	d8 f7       	brcc	.-10     	; 0x6c4 <strnlen+0x2>
 6ce:	80 95       	com	r24
 6d0:	90 95       	com	r25
 6d2:	8e 0f       	add	r24, r30
 6d4:	9f 1f       	adc	r25, r31
 6d6:	08 95       	ret

000006d8 <fputc>:
 6d8:	0f 93       	push	r16
 6da:	1f 93       	push	r17
 6dc:	cf 93       	push	r28
 6de:	df 93       	push	r29
 6e0:	fb 01       	movw	r30, r22
 6e2:	23 81       	ldd	r18, Z+3	; 0x03
 6e4:	21 fd       	sbrc	r18, 1
 6e6:	03 c0       	rjmp	.+6      	; 0x6ee <fputc+0x16>
 6e8:	8f ef       	ldi	r24, 0xFF	; 255
 6ea:	9f ef       	ldi	r25, 0xFF	; 255
 6ec:	2c c0       	rjmp	.+88     	; 0x746 <fputc+0x6e>
 6ee:	22 ff       	sbrs	r18, 2
 6f0:	16 c0       	rjmp	.+44     	; 0x71e <fputc+0x46>
 6f2:	46 81       	ldd	r20, Z+6	; 0x06
 6f4:	57 81       	ldd	r21, Z+7	; 0x07
 6f6:	24 81       	ldd	r18, Z+4	; 0x04
 6f8:	35 81       	ldd	r19, Z+5	; 0x05
 6fa:	42 17       	cp	r20, r18
 6fc:	53 07       	cpc	r21, r19
 6fe:	44 f4       	brge	.+16     	; 0x710 <fputc+0x38>
 700:	a0 81       	ld	r26, Z
 702:	b1 81       	ldd	r27, Z+1	; 0x01
 704:	9d 01       	movw	r18, r26
 706:	2f 5f       	subi	r18, 0xFF	; 255
 708:	3f 4f       	sbci	r19, 0xFF	; 255
 70a:	31 83       	std	Z+1, r19	; 0x01
 70c:	20 83       	st	Z, r18
 70e:	8c 93       	st	X, r24
 710:	26 81       	ldd	r18, Z+6	; 0x06
 712:	37 81       	ldd	r19, Z+7	; 0x07
 714:	2f 5f       	subi	r18, 0xFF	; 255
 716:	3f 4f       	sbci	r19, 0xFF	; 255
 718:	37 83       	std	Z+7, r19	; 0x07
 71a:	26 83       	std	Z+6, r18	; 0x06
 71c:	14 c0       	rjmp	.+40     	; 0x746 <fputc+0x6e>
 71e:	8b 01       	movw	r16, r22
 720:	ec 01       	movw	r28, r24
 722:	fb 01       	movw	r30, r22
 724:	00 84       	ldd	r0, Z+8	; 0x08
 726:	f1 85       	ldd	r31, Z+9	; 0x09
 728:	e0 2d       	mov	r30, r0
 72a:	09 95       	icall
 72c:	89 2b       	or	r24, r25
 72e:	e1 f6       	brne	.-72     	; 0x6e8 <fputc+0x10>
 730:	d8 01       	movw	r26, r16
 732:	16 96       	adiw	r26, 0x06	; 6
 734:	8d 91       	ld	r24, X+
 736:	9c 91       	ld	r25, X
 738:	17 97       	sbiw	r26, 0x07	; 7
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	17 96       	adiw	r26, 0x07	; 7
 73e:	9c 93       	st	X, r25
 740:	8e 93       	st	-X, r24
 742:	16 97       	sbiw	r26, 0x06	; 6
 744:	ce 01       	movw	r24, r28
 746:	df 91       	pop	r29
 748:	cf 91       	pop	r28
 74a:	1f 91       	pop	r17
 74c:	0f 91       	pop	r16
 74e:	08 95       	ret

00000750 <__ultoa_invert>:
 750:	fa 01       	movw	r30, r20
 752:	aa 27       	eor	r26, r26
 754:	28 30       	cpi	r18, 0x08	; 8
 756:	51 f1       	breq	.+84     	; 0x7ac <__ultoa_invert+0x5c>
 758:	20 31       	cpi	r18, 0x10	; 16
 75a:	81 f1       	breq	.+96     	; 0x7bc <__ultoa_invert+0x6c>
 75c:	e8 94       	clt
 75e:	6f 93       	push	r22
 760:	6e 7f       	andi	r22, 0xFE	; 254
 762:	6e 5f       	subi	r22, 0xFE	; 254
 764:	7f 4f       	sbci	r23, 0xFF	; 255
 766:	8f 4f       	sbci	r24, 0xFF	; 255
 768:	9f 4f       	sbci	r25, 0xFF	; 255
 76a:	af 4f       	sbci	r26, 0xFF	; 255
 76c:	b1 e0       	ldi	r27, 0x01	; 1
 76e:	3e d0       	rcall	.+124    	; 0x7ec <__ultoa_invert+0x9c>
 770:	b4 e0       	ldi	r27, 0x04	; 4
 772:	3c d0       	rcall	.+120    	; 0x7ec <__ultoa_invert+0x9c>
 774:	67 0f       	add	r22, r23
 776:	78 1f       	adc	r23, r24
 778:	89 1f       	adc	r24, r25
 77a:	9a 1f       	adc	r25, r26
 77c:	a1 1d       	adc	r26, r1
 77e:	68 0f       	add	r22, r24
 780:	79 1f       	adc	r23, r25
 782:	8a 1f       	adc	r24, r26
 784:	91 1d       	adc	r25, r1
 786:	a1 1d       	adc	r26, r1
 788:	6a 0f       	add	r22, r26
 78a:	71 1d       	adc	r23, r1
 78c:	81 1d       	adc	r24, r1
 78e:	91 1d       	adc	r25, r1
 790:	a1 1d       	adc	r26, r1
 792:	20 d0       	rcall	.+64     	; 0x7d4 <__ultoa_invert+0x84>
 794:	09 f4       	brne	.+2      	; 0x798 <__ultoa_invert+0x48>
 796:	68 94       	set
 798:	3f 91       	pop	r19
 79a:	2a e0       	ldi	r18, 0x0A	; 10
 79c:	26 9f       	mul	r18, r22
 79e:	11 24       	eor	r1, r1
 7a0:	30 19       	sub	r19, r0
 7a2:	30 5d       	subi	r19, 0xD0	; 208
 7a4:	31 93       	st	Z+, r19
 7a6:	de f6       	brtc	.-74     	; 0x75e <__ultoa_invert+0xe>
 7a8:	cf 01       	movw	r24, r30
 7aa:	08 95       	ret
 7ac:	46 2f       	mov	r20, r22
 7ae:	47 70       	andi	r20, 0x07	; 7
 7b0:	40 5d       	subi	r20, 0xD0	; 208
 7b2:	41 93       	st	Z+, r20
 7b4:	b3 e0       	ldi	r27, 0x03	; 3
 7b6:	0f d0       	rcall	.+30     	; 0x7d6 <__ultoa_invert+0x86>
 7b8:	c9 f7       	brne	.-14     	; 0x7ac <__ultoa_invert+0x5c>
 7ba:	f6 cf       	rjmp	.-20     	; 0x7a8 <__ultoa_invert+0x58>
 7bc:	46 2f       	mov	r20, r22
 7be:	4f 70       	andi	r20, 0x0F	; 15
 7c0:	40 5d       	subi	r20, 0xD0	; 208
 7c2:	4a 33       	cpi	r20, 0x3A	; 58
 7c4:	18 f0       	brcs	.+6      	; 0x7cc <__ultoa_invert+0x7c>
 7c6:	49 5d       	subi	r20, 0xD9	; 217
 7c8:	31 fd       	sbrc	r19, 1
 7ca:	40 52       	subi	r20, 0x20	; 32
 7cc:	41 93       	st	Z+, r20
 7ce:	02 d0       	rcall	.+4      	; 0x7d4 <__ultoa_invert+0x84>
 7d0:	a9 f7       	brne	.-22     	; 0x7bc <__ultoa_invert+0x6c>
 7d2:	ea cf       	rjmp	.-44     	; 0x7a8 <__ultoa_invert+0x58>
 7d4:	b4 e0       	ldi	r27, 0x04	; 4
 7d6:	a6 95       	lsr	r26
 7d8:	97 95       	ror	r25
 7da:	87 95       	ror	r24
 7dc:	77 95       	ror	r23
 7de:	67 95       	ror	r22
 7e0:	ba 95       	dec	r27
 7e2:	c9 f7       	brne	.-14     	; 0x7d6 <__ultoa_invert+0x86>
 7e4:	00 97       	sbiw	r24, 0x00	; 0
 7e6:	61 05       	cpc	r22, r1
 7e8:	71 05       	cpc	r23, r1
 7ea:	08 95       	ret
 7ec:	9b 01       	movw	r18, r22
 7ee:	ac 01       	movw	r20, r24
 7f0:	0a 2e       	mov	r0, r26
 7f2:	06 94       	lsr	r0
 7f4:	57 95       	ror	r21
 7f6:	47 95       	ror	r20
 7f8:	37 95       	ror	r19
 7fa:	27 95       	ror	r18
 7fc:	ba 95       	dec	r27
 7fe:	c9 f7       	brne	.-14     	; 0x7f2 <__ultoa_invert+0xa2>
 800:	62 0f       	add	r22, r18
 802:	73 1f       	adc	r23, r19
 804:	84 1f       	adc	r24, r20
 806:	95 1f       	adc	r25, r21
 808:	a0 1d       	adc	r26, r0
 80a:	08 95       	ret

0000080c <_exit>:
 80c:	f8 94       	cli

0000080e <__stop_program>:
 80e:	ff cf       	rjmp	.-2      	; 0x80e <__stop_program>
