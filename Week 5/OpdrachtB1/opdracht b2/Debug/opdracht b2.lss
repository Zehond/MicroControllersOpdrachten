
opdracht b2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000282  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002d6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000308  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000dcd  00000000  00000000  000003c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d4  00000000  00000000  00001191  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000052a  00000000  00000000  00001a65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000138  00000000  00000000  00001f90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000050f  00000000  00000000  000020c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000328  00000000  00000000  000025d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  000028ff  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	b1 d0       	rcall	.+354    	; 0x1fc <main>
  9a:	f1 c0       	rjmp	.+482    	; 0x27e <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <wait>:
void displayOff() 
{
  	spi_slaveSelect(0);				// Select display chip
  	spi_write(0x0C); 				// Register 0B: Shutdown register
  	spi_write(0x00); 				// 	-> 1 = Normal operation
  	spi_slaveDeSelect(0);			// Deselect display chip
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	08 c0       	rjmp	.+16     	; 0xb4 <wait+0x16>
  a4:	e3 ec       	ldi	r30, 0xC3	; 195
  a6:	f9 e0       	ldi	r31, 0x09	; 9
  a8:	31 97       	sbiw	r30, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <wait+0xa>
  ac:	00 c0       	rjmp	.+0      	; 0xae <wait+0x10>
  ae:	00 00       	nop
  b0:	2f 5f       	subi	r18, 0xFF	; 255
  b2:	3f 4f       	sbci	r19, 0xFF	; 255
  b4:	28 17       	cp	r18, r24
  b6:	39 07       	cpc	r19, r25
  b8:	ac f3       	brlt	.-22     	; 0xa4 <wait+0x6>
  ba:	08 95       	ret

000000bc <spi_masterInit>:
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	87 bb       	out	0x17, r24	; 23
  c0:	87 b3       	in	r24, 0x17	; 23
  c2:	87 7f       	andi	r24, 0xF7	; 247
  c4:	87 bb       	out	0x17, r24	; 23
  c6:	88 b3       	in	r24, 0x18	; 24
  c8:	81 60       	ori	r24, 0x01	; 1
  ca:	88 bb       	out	0x18, r24	; 24
  cc:	82 e5       	ldi	r24, 0x52	; 82
  ce:	8d b9       	out	0x0d, r24	; 13
  d0:	08 95       	ret

000000d2 <spi_write>:
  d2:	8f b9       	out	0x0f, r24	; 15
  d4:	77 9b       	sbis	0x0e, 7	; 14
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <spi_write+0x2>
  d8:	08 95       	ret

000000da <spi_slaveSelect>:
  da:	98 b3       	in	r25, 0x18	; 24
  dc:	21 e0       	ldi	r18, 0x01	; 1
  de:	30 e0       	ldi	r19, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <spi_slaveSelect+0xc>
  e2:	22 0f       	add	r18, r18
  e4:	33 1f       	adc	r19, r19
  e6:	8a 95       	dec	r24
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <spi_slaveSelect+0x8>
  ea:	20 95       	com	r18
  ec:	29 23       	and	r18, r25
  ee:	28 bb       	out	0x18, r18	; 24
  f0:	08 95       	ret

000000f2 <spi_slaveDeSelect>:
  f2:	98 b3       	in	r25, 0x18	; 24
  f4:	21 e0       	ldi	r18, 0x01	; 1
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <spi_slaveDeSelect+0xc>
  fa:	22 0f       	add	r18, r18
  fc:	33 1f       	adc	r19, r19
  fe:	8a 95       	dec	r24
 100:	e2 f7       	brpl	.-8      	; 0xfa <spi_slaveDeSelect+0x8>
 102:	29 2b       	or	r18, r25
 104:	28 bb       	out	0x18, r18	; 24
 106:	08 95       	ret

00000108 <spi_writeWord>:
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	d8 2f       	mov	r29, r24
 10e:	c6 2f       	mov	r28, r22
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	e3 df       	rcall	.-58     	; 0xda <spi_slaveSelect>
 114:	8d 2f       	mov	r24, r29
 116:	dd df       	rcall	.-70     	; 0xd2 <spi_write>
 118:	8c 2f       	mov	r24, r28
 11a:	db df       	rcall	.-74     	; 0xd2 <spi_write>
 11c:	80 e0       	ldi	r24, 0x00	; 0
 11e:	e9 df       	rcall	.-46     	; 0xf2 <spi_slaveDeSelect>
 120:	df 91       	pop	r29
 122:	cf 91       	pop	r28
 124:	08 95       	ret

00000126 <writeLedDisplayNegatieve>:
 126:	bf 92       	push	r11
 128:	cf 92       	push	r12
 12a:	df 92       	push	r13
 12c:	ef 92       	push	r14
 12e:	ff 92       	push	r15
 130:	0f 93       	push	r16
 132:	1f 93       	push	r17
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	9c 01       	movw	r18, r24
 13a:	99 23       	and	r25, r25
 13c:	3c f4       	brge	.+14     	; 0x14c <writeLedDisplayNegatieve+0x26>
 13e:	31 95       	neg	r19
 140:	21 95       	neg	r18
 142:	31 09       	sbc	r19, r1
 144:	cc 24       	eor	r12, r12
 146:	c3 94       	inc	r12
 148:	d1 2c       	mov	r13, r1
 14a:	02 c0       	rjmp	.+4      	; 0x150 <writeLedDisplayNegatieve+0x2a>
 14c:	c1 2c       	mov	r12, r1
 14e:	d1 2c       	mov	r13, r1
 150:	ea e0       	ldi	r30, 0x0A	; 10
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	c9 01       	movw	r24, r18
 156:	bf 01       	movw	r22, r30
 158:	6b d0       	rcall	.+214    	; 0x230 <__divmodhi4>
 15a:	48 2f       	mov	r20, r24
 15c:	cb 01       	movw	r24, r22
 15e:	bf 01       	movw	r22, r30
 160:	67 d0       	rcall	.+206    	; 0x230 <__divmodhi4>
 162:	e8 2e       	mov	r14, r24
 164:	c8 2f       	mov	r28, r24
 166:	d9 2f       	mov	r29, r25
 168:	c9 01       	movw	r24, r18
 16a:	64 e6       	ldi	r22, 0x64	; 100
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	60 d0       	rcall	.+192    	; 0x230 <__divmodhi4>
 170:	cb 01       	movw	r24, r22
 172:	bf 01       	movw	r22, r30
 174:	5d d0       	rcall	.+186    	; 0x230 <__divmodhi4>
 176:	f8 2e       	mov	r15, r24
 178:	08 2f       	mov	r16, r24
 17a:	19 2f       	mov	r17, r25
 17c:	c9 01       	movw	r24, r18
 17e:	68 ee       	ldi	r22, 0xE8	; 232
 180:	73 e0       	ldi	r23, 0x03	; 3
 182:	56 d0       	rcall	.+172    	; 0x230 <__divmodhi4>
 184:	cb 01       	movw	r24, r22
 186:	bf 01       	movw	r22, r30
 188:	53 d0       	rcall	.+166    	; 0x230 <__divmodhi4>
 18a:	b8 2e       	mov	r11, r24
 18c:	64 2f       	mov	r22, r20
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	bb df       	rcall	.-138    	; 0x108 <spi_writeWord>
 192:	6e 2d       	mov	r22, r14
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	b8 df       	rcall	.-144    	; 0x108 <spi_writeWord>
 198:	6f 2d       	mov	r22, r15
 19a:	83 e0       	ldi	r24, 0x03	; 3
 19c:	b5 df       	rcall	.-150    	; 0x108 <spi_writeWord>
 19e:	6b 2d       	mov	r22, r11
 1a0:	84 e0       	ldi	r24, 0x04	; 4
 1a2:	b2 df       	rcall	.-156    	; 0x108 <spi_writeWord>
 1a4:	cd 28       	or	r12, r13
 1a6:	99 f0       	breq	.+38     	; 0x1ce <writeLedDisplayNegatieve+0xa8>
 1a8:	01 2b       	or	r16, r17
 1aa:	29 f4       	brne	.+10     	; 0x1b6 <writeLedDisplayNegatieve+0x90>
 1ac:	6f e0       	ldi	r22, 0x0F	; 15
 1ae:	84 e0       	ldi	r24, 0x04	; 4
 1b0:	ab df       	rcall	.-170    	; 0x108 <spi_writeWord>
 1b2:	83 e0       	ldi	r24, 0x03	; 3
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <writeLedDisplayNegatieve+0x92>
 1b6:	84 e0       	ldi	r24, 0x04	; 4
 1b8:	cd 2b       	or	r28, r29
 1ba:	39 f4       	brne	.+14     	; 0x1ca <writeLedDisplayNegatieve+0xa4>
 1bc:	6f e0       	ldi	r22, 0x0F	; 15
 1be:	84 e0       	ldi	r24, 0x04	; 4
 1c0:	a3 df       	rcall	.-186    	; 0x108 <spi_writeWord>
 1c2:	6f e0       	ldi	r22, 0x0F	; 15
 1c4:	83 e0       	ldi	r24, 0x03	; 3
 1c6:	a0 df       	rcall	.-192    	; 0x108 <spi_writeWord>
 1c8:	82 e0       	ldi	r24, 0x02	; 2
 1ca:	6a e0       	ldi	r22, 0x0A	; 10
 1cc:	9d df       	rcall	.-198    	; 0x108 <spi_writeWord>
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	1f 91       	pop	r17
 1d4:	0f 91       	pop	r16
 1d6:	ff 90       	pop	r15
 1d8:	ef 90       	pop	r14
 1da:	df 90       	pop	r13
 1dc:	cf 90       	pop	r12
 1de:	bf 90       	pop	r11
 1e0:	08 95       	ret

000001e2 <displayDriverInit>:
 1e2:	6f ef       	ldi	r22, 0xFF	; 255
 1e4:	89 e0       	ldi	r24, 0x09	; 9
 1e6:	90 df       	rcall	.-224    	; 0x108 <spi_writeWord>
 1e8:	6f e0       	ldi	r22, 0x0F	; 15
 1ea:	8a e0       	ldi	r24, 0x0A	; 10
 1ec:	8d df       	rcall	.-230    	; 0x108 <spi_writeWord>
 1ee:	63 e0       	ldi	r22, 0x03	; 3
 1f0:	8b e0       	ldi	r24, 0x0B	; 11
 1f2:	8a df       	rcall	.-236    	; 0x108 <spi_writeWord>
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	8c e0       	ldi	r24, 0x0C	; 12
 1f8:	87 cf       	rjmp	.-242    	; 0x108 <spi_writeWord>
 1fa:	08 95       	ret

000001fc <main>:
}

int main()
{
 1fc:	cf 93       	push	r28
	// inilialize
	DDRB=0x01;					  	// Set PB0 pin as output for display select
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	87 bb       	out	0x17, r24	; 23
	spi_masterInit();              	// Initialize spi module
 202:	5c df       	rcall	.-328    	; 0xbc <spi_masterInit>
	displayDriverInit();            // Initialize display chip
 204:	ee df       	rcall	.-36     	; 0x1e2 <displayDriverInit>
 206:	c1 e0       	ldi	r28, 0x01	; 1

 	// clear display (all zero's)
	for (char i =1; i<=4; i++)
 208:	04 c0       	rjmp	.+8      	; 0x212 <main+0x16>
 20a:	60 e0       	ldi	r22, 0x00	; 0
	{
      		spi_writeWord(i,0);
 20c:	8c 2f       	mov	r24, r28
 20e:	7c df       	rcall	.-264    	; 0x108 <spi_writeWord>
 210:	cf 5f       	subi	r28, 0xFF	; 255
	DDRB=0x01;					  	// Set PB0 pin as output for display select
	spi_masterInit();              	// Initialize spi module
	displayDriverInit();            // Initialize display chip

 	// clear display (all zero's)
	for (char i =1; i<=4; i++)
 212:	c5 30       	cpi	r28, 0x05	; 5
 214:	d0 f3       	brcs	.-12     	; 0x20a <main+0xe>
	{
      		spi_writeWord(i,0);
	}    
	wait(1000);
 216:	88 ee       	ldi	r24, 0xE8	; 232
 218:	93 e0       	ldi	r25, 0x03	; 3
 21a:	41 df       	rcall	.-382    	; 0x9e <wait>
	writeLedDisplayNegatieve(-652);
 21c:	84 e7       	ldi	r24, 0x74	; 116
 21e:	9d ef       	ldi	r25, 0xFD	; 253
 220:	82 df       	rcall	.-252    	; 0x126 <writeLedDisplayNegatieve>

	wait(1000);
 222:	88 ee       	ldi	r24, 0xE8	; 232
 224:	93 e0       	ldi	r25, 0x03	; 3
 226:	3b df       	rcall	.-394    	; 0x9e <wait>
 228:	81 e0       	ldi	r24, 0x01	; 1

  	return (1);
}
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	cf 91       	pop	r28
 22e:	08 95       	ret

00000230 <__divmodhi4>:
 230:	97 fb       	bst	r25, 7
 232:	07 2e       	mov	r0, r23
 234:	16 f4       	brtc	.+4      	; 0x23a <__divmodhi4+0xa>
 236:	00 94       	com	r0
 238:	06 d0       	rcall	.+12     	; 0x246 <__divmodhi4_neg1>
 23a:	77 fd       	sbrc	r23, 7
 23c:	08 d0       	rcall	.+16     	; 0x24e <__divmodhi4_neg2>
 23e:	0b d0       	rcall	.+22     	; 0x256 <__udivmodhi4>
 240:	07 fc       	sbrc	r0, 7
 242:	05 d0       	rcall	.+10     	; 0x24e <__divmodhi4_neg2>
 244:	3e f4       	brtc	.+14     	; 0x254 <__divmodhi4_exit>

00000246 <__divmodhi4_neg1>:
 246:	90 95       	com	r25
 248:	81 95       	neg	r24
 24a:	9f 4f       	sbci	r25, 0xFF	; 255
 24c:	08 95       	ret

0000024e <__divmodhi4_neg2>:
 24e:	70 95       	com	r23
 250:	61 95       	neg	r22
 252:	7f 4f       	sbci	r23, 0xFF	; 255

00000254 <__divmodhi4_exit>:
 254:	08 95       	ret

00000256 <__udivmodhi4>:
 256:	aa 1b       	sub	r26, r26
 258:	bb 1b       	sub	r27, r27
 25a:	51 e1       	ldi	r21, 0x11	; 17
 25c:	07 c0       	rjmp	.+14     	; 0x26c <__udivmodhi4_ep>

0000025e <__udivmodhi4_loop>:
 25e:	aa 1f       	adc	r26, r26
 260:	bb 1f       	adc	r27, r27
 262:	a6 17       	cp	r26, r22
 264:	b7 07       	cpc	r27, r23
 266:	10 f0       	brcs	.+4      	; 0x26c <__udivmodhi4_ep>
 268:	a6 1b       	sub	r26, r22
 26a:	b7 0b       	sbc	r27, r23

0000026c <__udivmodhi4_ep>:
 26c:	88 1f       	adc	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	5a 95       	dec	r21
 272:	a9 f7       	brne	.-22     	; 0x25e <__udivmodhi4_loop>
 274:	80 95       	com	r24
 276:	90 95       	com	r25
 278:	bc 01       	movw	r22, r24
 27a:	cd 01       	movw	r24, r26
 27c:	08 95       	ret

0000027e <_exit>:
 27e:	f8 94       	cli

00000280 <__stop_program>:
 280:	ff cf       	rjmp	.-2      	; 0x280 <__stop_program>
