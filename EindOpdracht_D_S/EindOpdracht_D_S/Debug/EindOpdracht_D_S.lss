
EindOpdracht_D_S.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000028e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002e2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000314  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000350  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d4a  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e9  00000000  00000000  0000111a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000506  00000000  00000000  00001a03  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00001f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000536  00000000  00000000  0000202c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000289  00000000  00000000  00002562  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  000027eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	bd d0       	rcall	.+378    	; 0x214 <main>
  9a:	f7 c0       	rjmp	.+494    	; 0x28a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <wait>:
void displayOff()
{
	spi_slaveSelect(0);				// Select display chip
	spi_write(0x0C); 				// Register 0B: Shutdown register
	spi_write(0x00); 				// 	-> 1 = Normal operation
	spi_slaveDeSelect(0);			// Deselect display chip
  9e:	20 e0       	ldi	r18, 0x00	; 0
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	08 c0       	rjmp	.+16     	; 0xb4 <wait+0x16>
  a4:	e3 ec       	ldi	r30, 0xC3	; 195
  a6:	f9 e0       	ldi	r31, 0x09	; 9
  a8:	31 97       	sbiw	r30, 0x01	; 1
  aa:	f1 f7       	brne	.-4      	; 0xa8 <wait+0xa>
  ac:	00 c0       	rjmp	.+0      	; 0xae <wait+0x10>
  ae:	00 00       	nop
  b0:	2f 5f       	subi	r18, 0xFF	; 255
  b2:	3f 4f       	sbci	r19, 0xFF	; 255
  b4:	28 17       	cp	r18, r24
  b6:	39 07       	cpc	r19, r25
  b8:	ac f3       	brlt	.-22     	; 0xa4 <wait+0x6>
  ba:	08 95       	ret

000000bc <adcInit>:
  bc:	83 ee       	ldi	r24, 0xE3	; 227
  be:	87 b9       	out	0x07, r24	; 7
  c0:	86 e8       	ldi	r24, 0x86	; 134
  c2:	86 b9       	out	0x06, r24	; 6
  c4:	08 95       	ret

000000c6 <readTemperature>:
  c6:	86 b1       	in	r24, 0x06	; 6
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	86 b9       	out	0x06, r24	; 6
  cc:	36 99       	sbic	0x06, 6	; 6
  ce:	fe cf       	rjmp	.-4      	; 0xcc <readTemperature+0x6>
  d0:	85 b1       	in	r24, 0x05	; 5
  d2:	08 95       	ret

000000d4 <spi_masterInit>:
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	87 bb       	out	0x17, r24	; 23
  d8:	87 b3       	in	r24, 0x17	; 23
  da:	87 7f       	andi	r24, 0xF7	; 247
  dc:	87 bb       	out	0x17, r24	; 23
  de:	88 b3       	in	r24, 0x18	; 24
  e0:	81 60       	ori	r24, 0x01	; 1
  e2:	88 bb       	out	0x18, r24	; 24
  e4:	82 e5       	ldi	r24, 0x52	; 82
  e6:	8d b9       	out	0x0d, r24	; 13
  e8:	08 95       	ret

000000ea <spi_write>:
  ea:	8f b9       	out	0x0f, r24	; 15
  ec:	77 9b       	sbis	0x0e, 7	; 14
  ee:	fe cf       	rjmp	.-4      	; 0xec <spi_write+0x2>
  f0:	08 95       	ret

000000f2 <spi_slaveSelect>:
  f2:	98 b3       	in	r25, 0x18	; 24
  f4:	21 e0       	ldi	r18, 0x01	; 1
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <spi_slaveSelect+0xc>
  fa:	22 0f       	add	r18, r18
  fc:	33 1f       	adc	r19, r19
  fe:	8a 95       	dec	r24
 100:	e2 f7       	brpl	.-8      	; 0xfa <spi_slaveSelect+0x8>
 102:	20 95       	com	r18
 104:	29 23       	and	r18, r25
 106:	28 bb       	out	0x18, r18	; 24
 108:	08 95       	ret

0000010a <spi_slaveDeSelect>:
 10a:	98 b3       	in	r25, 0x18	; 24
 10c:	21 e0       	ldi	r18, 0x01	; 1
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	02 c0       	rjmp	.+4      	; 0x116 <spi_slaveDeSelect+0xc>
 112:	22 0f       	add	r18, r18
 114:	33 1f       	adc	r19, r19
 116:	8a 95       	dec	r24
 118:	e2 f7       	brpl	.-8      	; 0x112 <spi_slaveDeSelect+0x8>
 11a:	29 2b       	or	r18, r25
 11c:	28 bb       	out	0x18, r18	; 24
 11e:	08 95       	ret

00000120 <spi_writeWord>:
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	d8 2f       	mov	r29, r24
 126:	c6 2f       	mov	r28, r22
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	e3 df       	rcall	.-58     	; 0xf2 <spi_slaveSelect>
 12c:	8d 2f       	mov	r24, r29
 12e:	dd df       	rcall	.-70     	; 0xea <spi_write>
 130:	8c 2f       	mov	r24, r28
 132:	db df       	rcall	.-74     	; 0xea <spi_write>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	e9 df       	rcall	.-46     	; 0x10a <spi_slaveDeSelect>
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <writeLedDisplayNegatieve>:
 13e:	bf 92       	push	r11
 140:	cf 92       	push	r12
 142:	df 92       	push	r13
 144:	ef 92       	push	r14
 146:	ff 92       	push	r15
 148:	0f 93       	push	r16
 14a:	1f 93       	push	r17
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	9c 01       	movw	r18, r24
 152:	99 23       	and	r25, r25
 154:	3c f4       	brge	.+14     	; 0x164 <writeLedDisplayNegatieve+0x26>
 156:	31 95       	neg	r19
 158:	21 95       	neg	r18
 15a:	31 09       	sbc	r19, r1
 15c:	cc 24       	eor	r12, r12
 15e:	c3 94       	inc	r12
 160:	d1 2c       	mov	r13, r1
 162:	02 c0       	rjmp	.+4      	; 0x168 <writeLedDisplayNegatieve+0x2a>
 164:	c1 2c       	mov	r12, r1
 166:	d1 2c       	mov	r13, r1
 168:	ea e0       	ldi	r30, 0x0A	; 10
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	c9 01       	movw	r24, r18
 16e:	bf 01       	movw	r22, r30
 170:	65 d0       	rcall	.+202    	; 0x23c <__divmodhi4>
 172:	48 2f       	mov	r20, r24
 174:	cb 01       	movw	r24, r22
 176:	bf 01       	movw	r22, r30
 178:	61 d0       	rcall	.+194    	; 0x23c <__divmodhi4>
 17a:	e8 2e       	mov	r14, r24
 17c:	c8 2f       	mov	r28, r24
 17e:	d9 2f       	mov	r29, r25
 180:	c9 01       	movw	r24, r18
 182:	64 e6       	ldi	r22, 0x64	; 100
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	5a d0       	rcall	.+180    	; 0x23c <__divmodhi4>
 188:	cb 01       	movw	r24, r22
 18a:	bf 01       	movw	r22, r30
 18c:	57 d0       	rcall	.+174    	; 0x23c <__divmodhi4>
 18e:	f8 2e       	mov	r15, r24
 190:	08 2f       	mov	r16, r24
 192:	19 2f       	mov	r17, r25
 194:	c9 01       	movw	r24, r18
 196:	68 ee       	ldi	r22, 0xE8	; 232
 198:	73 e0       	ldi	r23, 0x03	; 3
 19a:	50 d0       	rcall	.+160    	; 0x23c <__divmodhi4>
 19c:	cb 01       	movw	r24, r22
 19e:	bf 01       	movw	r22, r30
 1a0:	4d d0       	rcall	.+154    	; 0x23c <__divmodhi4>
 1a2:	b8 2e       	mov	r11, r24
 1a4:	64 2f       	mov	r22, r20
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	bb df       	rcall	.-138    	; 0x120 <spi_writeWord>
 1aa:	6e 2d       	mov	r22, r14
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	b8 df       	rcall	.-144    	; 0x120 <spi_writeWord>
 1b0:	6f 2d       	mov	r22, r15
 1b2:	83 e0       	ldi	r24, 0x03	; 3
 1b4:	b5 df       	rcall	.-150    	; 0x120 <spi_writeWord>
 1b6:	6b 2d       	mov	r22, r11
 1b8:	84 e0       	ldi	r24, 0x04	; 4
 1ba:	b2 df       	rcall	.-156    	; 0x120 <spi_writeWord>
 1bc:	cd 28       	or	r12, r13
 1be:	99 f0       	breq	.+38     	; 0x1e6 <writeLedDisplayNegatieve+0xa8>
 1c0:	01 2b       	or	r16, r17
 1c2:	29 f4       	brne	.+10     	; 0x1ce <writeLedDisplayNegatieve+0x90>
 1c4:	6f e0       	ldi	r22, 0x0F	; 15
 1c6:	84 e0       	ldi	r24, 0x04	; 4
 1c8:	ab df       	rcall	.-170    	; 0x120 <spi_writeWord>
 1ca:	83 e0       	ldi	r24, 0x03	; 3
 1cc:	01 c0       	rjmp	.+2      	; 0x1d0 <writeLedDisplayNegatieve+0x92>
 1ce:	84 e0       	ldi	r24, 0x04	; 4
 1d0:	cd 2b       	or	r28, r29
 1d2:	39 f4       	brne	.+14     	; 0x1e2 <writeLedDisplayNegatieve+0xa4>
 1d4:	6f e0       	ldi	r22, 0x0F	; 15
 1d6:	84 e0       	ldi	r24, 0x04	; 4
 1d8:	a3 df       	rcall	.-186    	; 0x120 <spi_writeWord>
 1da:	6f e0       	ldi	r22, 0x0F	; 15
 1dc:	83 e0       	ldi	r24, 0x03	; 3
 1de:	a0 df       	rcall	.-192    	; 0x120 <spi_writeWord>
 1e0:	82 e0       	ldi	r24, 0x02	; 2
 1e2:	6a e0       	ldi	r22, 0x0A	; 10
 1e4:	9d df       	rcall	.-198    	; 0x120 <spi_writeWord>
 1e6:	df 91       	pop	r29
 1e8:	cf 91       	pop	r28
 1ea:	1f 91       	pop	r17
 1ec:	0f 91       	pop	r16
 1ee:	ff 90       	pop	r15
 1f0:	ef 90       	pop	r14
 1f2:	df 90       	pop	r13
 1f4:	cf 90       	pop	r12
 1f6:	bf 90       	pop	r11
 1f8:	08 95       	ret

000001fa <displayDriverInit>:
 1fa:	6f ef       	ldi	r22, 0xFF	; 255
 1fc:	89 e0       	ldi	r24, 0x09	; 9
 1fe:	90 df       	rcall	.-224    	; 0x120 <spi_writeWord>
 200:	6f e0       	ldi	r22, 0x0F	; 15
 202:	8a e0       	ldi	r24, 0x0A	; 10
 204:	8d df       	rcall	.-230    	; 0x120 <spi_writeWord>
 206:	63 e0       	ldi	r22, 0x03	; 3
 208:	8b e0       	ldi	r24, 0x0B	; 11
 20a:	8a df       	rcall	.-236    	; 0x120 <spi_writeWord>
 20c:	61 e0       	ldi	r22, 0x01	; 1
 20e:	8c e0       	ldi	r24, 0x0C	; 12
 210:	87 cf       	rjmp	.-242    	; 0x120 <spi_writeWord>
 212:	08 95       	ret

00000214 <main>:


int main()
{
	// inilialize
	DDRB=0x01;				// Set PB0 pin as output for display select
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	87 bb       	out	0x17, r24	; 23
	spi_masterInit();       // Initialize spi module
 218:	5d df       	rcall	.-326    	; 0xd4 <spi_masterInit>
	displayDriverInit();// Initialize display chip
 21a:	ef df       	rcall	.-34     	; 0x1fa <displayDriverInit>
	adcInit();
 21c:	4f df       	rcall	.-354    	; 0xbc <adcInit>
 21e:	c1 e0       	ldi	r28, 0x01	; 1

	char buffer[16];  // Buffer voor tekst op LCD

	// clear display (all zero's)
	for (char i =1; i<=4; i++)
 220:	04 c0       	rjmp	.+8      	; 0x22a <main+0x16>
	{
		spi_writeWord(i,0);
 222:	60 e0       	ldi	r22, 0x00	; 0
 224:	8c 2f       	mov	r24, r28
 226:	7c df       	rcall	.-264    	; 0x120 <spi_writeWord>
	adcInit();

	char buffer[16];  // Buffer voor tekst op LCD

	// clear display (all zero's)
	for (char i =1; i<=4; i++)
 228:	cf 5f       	subi	r28, 0xFF	; 255
 22a:	c5 30       	cpi	r28, 0x05	; 5
	}
	
		
	while (1) {
		// Lees temperatuur
		uint8_t temperatuur = readTemperature();
 22c:	d0 f3       	brcs	.-12     	; 0x222 <main+0xe>
		writeLedDisplayNegatieve(temperatuur);
 22e:	4b df       	rcall	.-362    	; 0xc6 <readTemperature>
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	85 df       	rcall	.-246    	; 0x13e <writeLedDisplayNegatieve>
		wait(500); // Wacht 500ms voor volgende meting
 234:	84 ef       	ldi	r24, 0xF4	; 244
 236:	91 e0       	ldi	r25, 0x01	; 1
 238:	32 df       	rcall	.-412    	; 0x9e <wait>
 23a:	f9 cf       	rjmp	.-14     	; 0x22e <main+0x1a>

0000023c <__divmodhi4>:
 23c:	97 fb       	bst	r25, 7
 23e:	07 2e       	mov	r0, r23
 240:	16 f4       	brtc	.+4      	; 0x246 <__divmodhi4+0xa>
 242:	00 94       	com	r0
 244:	06 d0       	rcall	.+12     	; 0x252 <__divmodhi4_neg1>
 246:	77 fd       	sbrc	r23, 7
 248:	08 d0       	rcall	.+16     	; 0x25a <__divmodhi4_neg2>
 24a:	0b d0       	rcall	.+22     	; 0x262 <__udivmodhi4>
 24c:	07 fc       	sbrc	r0, 7
 24e:	05 d0       	rcall	.+10     	; 0x25a <__divmodhi4_neg2>
 250:	3e f4       	brtc	.+14     	; 0x260 <__divmodhi4_exit>

00000252 <__divmodhi4_neg1>:
 252:	90 95       	com	r25
 254:	81 95       	neg	r24
 256:	9f 4f       	sbci	r25, 0xFF	; 255
 258:	08 95       	ret

0000025a <__divmodhi4_neg2>:
 25a:	70 95       	com	r23
 25c:	61 95       	neg	r22
 25e:	7f 4f       	sbci	r23, 0xFF	; 255

00000260 <__divmodhi4_exit>:
 260:	08 95       	ret

00000262 <__udivmodhi4>:
 262:	aa 1b       	sub	r26, r26
 264:	bb 1b       	sub	r27, r27
 266:	51 e1       	ldi	r21, 0x11	; 17
 268:	07 c0       	rjmp	.+14     	; 0x278 <__udivmodhi4_ep>

0000026a <__udivmodhi4_loop>:
 26a:	aa 1f       	adc	r26, r26
 26c:	bb 1f       	adc	r27, r27
 26e:	a6 17       	cp	r26, r22
 270:	b7 07       	cpc	r27, r23
 272:	10 f0       	brcs	.+4      	; 0x278 <__udivmodhi4_ep>
 274:	a6 1b       	sub	r26, r22
 276:	b7 0b       	sbc	r27, r23

00000278 <__udivmodhi4_ep>:
 278:	88 1f       	adc	r24, r24
 27a:	99 1f       	adc	r25, r25
 27c:	5a 95       	dec	r21
 27e:	a9 f7       	brne	.-22     	; 0x26a <__udivmodhi4_loop>
 280:	80 95       	com	r24
 282:	90 95       	com	r25
 284:	bc 01       	movw	r22, r24
 286:	cd 01       	movw	r24, r26
 288:	08 95       	ret

0000028a <_exit>:
 28a:	f8 94       	cli

0000028c <__stop_program>:
 28c:	ff cf       	rjmp	.-2      	; 0x28c <__stop_program>
